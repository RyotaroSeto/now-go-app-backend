// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injection

import (
	"now-go-kon/pkg/application"
	"now-go-kon/pkg/infrastructure"
	"now-go-kon/pkg/userinterface"
)

import (
	_ "github.com/google/subcommands"
	_ "golang.org/x/mod/module"
	_ "golang.org/x/tools/go/types/typeutil"
)

// Injectors from wire.go:

func InitializeAuthController() *userinterface.AuthController {
	authRepository := infrastructure.NewAuthRepository()
	db := infrastructure.GetDB()
	authService := application.NewAuthService(authRepository, db)
	authController := userinterface.NewAuthController(authService)
	return authController
}

func InitializeUserController() *userinterface.UserController {
	userRepository := infrastructure.NewUserRepository()
	db := infrastructure.GetDB()
	userService := application.NewUserService(userRepository, db)
	userController := userinterface.NewUserController(userService)
	return userController
}

func InitializeBoardController() *userinterface.BoardController {
	boardRepository := infrastructure.NewBoardRepository()
	db := infrastructure.GetDB()
	boardService := application.NewBoardService(boardRepository, db)
	boardController := userinterface.NewBoardController(boardService)
	return boardController
}
