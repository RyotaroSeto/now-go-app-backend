definitions:
  userinterface.ApprovalRequest:
    properties:
      liked_user_id:
        type: integer
      user_id:
        type: integer
    type: object
  userinterface.BoardGetRequest:
    properties:
      gender:
        type: string
    type: object
  userinterface.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      user_name:
        type: string
    required:
    - email
    - password
    - user_name
    type: object
  userinterface.GetBoardResponse:
    properties:
      board_id:
        type: integer
      body:
        type: string
      created_date:
        type: string
      user_id:
        type: integer
    type: object
  userinterface.GetLikeRequest:
    properties:
      user_id:
        type: integer
    type: object
  userinterface.GetLikedResponse:
    properties:
      liked_date:
        type: string
      liked_user_id:
        type: integer
      message_body:
        type: string
    type: object
  userinterface.LikeRequest:
    properties:
      liked_user_id:
        type: integer
      message_body:
        type: string
      user_id:
        type: integer
    type: object
  userinterface.ScrollRequest:
    properties:
      board_id:
        type: integer
      gender:
        type: string
    type: object
  userinterface.UserCreateResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password_changed_at:
        type: string
      username:
        type: string
    type: object
  userinterface.UserDetailResponse:
    properties:
      age:
        type: integer
      gender:
        type: string
      graduation:
        type: string
      height:
        type: integer
      hobby:
        type: string
      introduction:
        type: string
      location:
        type: string
      name:
        type: string
      passion:
        type: string
      tweet:
        type: string
      user_id:
        type: integer
      work:
        type: string
    type: object
  userinterface.UserRequest:
    properties:
      id:
        type: integer
    type: object
  userinterface.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      status:
        type: integer
      user_detail:
        $ref: '#/definitions/userinterface.UserDetailResponse'
      user_name:
        type: string
    type: object
  userinterface.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/userinterface.UserCreateResponse'
    type: object
info:
  contact: {}
paths:
  /api/v1/board:
    get:
      description: 掲示板を表示した時に呼ばれる API
      parameters:
      - description: Gender
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.BoardGetRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/userinterface.GetBoardResponse'
            type: array
      summary: 掲示板一覧参照 API
  /api/v1/board/scroll:
    get:
      description: 掲示板を表示時20件以上前の情報参照時呼ばれる API
      parameters:
      - description: Gender, BoardID
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.ScrollRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/userinterface.GetBoardResponse'
            type: array
      summary: 掲示板スクロール参照 API
  /api/v1/like:
    get:
      description: 自身にいいねをしたユーザー一覧を表示した時呼ばれる API
      parameters:
      - description: UserID
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.GetLikeRequest'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/userinterface.GetLikedResponse'
            type: array
      summary: いいね一覧参照 API
    post:
      description: ユーザーがいいねした時呼ばれる API
      parameters:
      - description: UserID, LikedUserID, MessageBody
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.LikeRequest'
      responses:
        "200":
          description: OK
      summary: いいね API
  /api/v1/like/approval:
    post:
      description: ユーザーがいいね一覧からユーザーを選び承認時呼ばれる API
      parameters:
      - description: UserID, LikedUserID
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.ApprovalRequest'
      responses:
        "200":
          description: OK
      summary: ユーザー承認 API
  /api/v1/users:
    get:
      description: 指定ユーザーのプロフィール確認時呼ばれる API
      parameters:
      - description: ID
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userinterface.UserResponse'
      summary: ユーザープロフィール情報参照 API
    post:
      description: ユーザー作成時呼ばれる API
      parameters:
      - description: Username, Password, Email
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.CreateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userinterface.UserCreateResponse'
      summary: ユーザー作成 API
    put:
      description: 自身のプロフィール情報更新時呼ばれる API
      parameters:
      - description: ID, DateOfBirth, Gender, Residence, Occupation, Height, Weight
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.UserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userinterface.UserDetailResponse'
      summary: ユーザープロフィール情報更新 API
  /api/v1/users/login:
    post:
      description: ユーザーがログイン時呼ばれる API
      parameters:
      - description: Username, Password
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/userinterface.CreateUserRequest'
      responses: {}
      summary: パスワード認証 API
swagger: "2.0"
